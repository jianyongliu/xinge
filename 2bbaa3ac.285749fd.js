(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{135:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return o})),a.d(n,"rightToc",(function(){return i})),a.d(n,"metadata",(function(){return p})),a.d(n,"default",(function(){return d}));var t=a(1),r=a(9),l=(a(0),a(178)),o={id:"loading-graphql-files",title:"Loading .graphql Files",sidebar_label:"Loading .graphql Files"},i=[],p={id:"loading-graphql-files",title:"Loading .graphql Files",description:"To load `.gql` and `.graphql` files, first install the [`graphql`](https://www.npmjs.com/package/graphql) and [`graphql.macro`](https://www.npmjs.com/package/graphql.macro) packages by running:",source:"@site/..\\docs\\loading-graphql-files.md",permalink:"/xinge/docs/loading-graphql-files",editUrl:"https://github.com/facebook/create-react-app/edit/master/docusaurus/website/../docs/loading-graphql-files.md",lastUpdatedBy:"jianyongliu",lastUpdatedAt:1602661662,sidebar_label:"Loading .graphql Files",sidebar:"docs",previous:{title:"Adding Images, Fonts, and Files",permalink:"/xinge/docs/adding-images-fonts-and-files"},next:{title:"Using the Public Folder",permalink:"/xinge/docs/using-the-public-folder"}},c={rightToc:i,metadata:p},s="wrapper";function d(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)(s,Object(t.a)({},c,a,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"To load ",Object(l.b)("inlineCode",{parentName:"p"},".gql")," and ",Object(l.b)("inlineCode",{parentName:"p"},".graphql")," files, first install the ",Object(l.b)("a",Object(t.a)({parentName:"p"},{href:"https://www.npmjs.com/package/graphql"}),Object(l.b)("inlineCode",{parentName:"a"},"graphql"))," and ",Object(l.b)("a",Object(t.a)({parentName:"p"},{href:"https://www.npmjs.com/package/graphql.macro"}),Object(l.b)("inlineCode",{parentName:"a"},"graphql.macro"))," packages by running:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-sh"}),"npm install --save graphql graphql.macro\n")),Object(l.b)("p",null,"Alternatively you may use ",Object(l.b)("inlineCode",{parentName:"p"},"yarn"),":"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-sh"}),"yarn add graphql graphql.macro\n")),Object(l.b)("p",null,"Then, whenever you want to load ",Object(l.b)("inlineCode",{parentName:"p"},".gql")," or ",Object(l.b)("inlineCode",{parentName:"p"},".graphql")," files, import the ",Object(l.b)("inlineCode",{parentName:"p"},"loader")," from the macro package:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"import { loader } from 'graphql.macro';\n\nconst query = loader('./foo.graphql');\n")),Object(l.b)("p",null,"And your results get automatically inlined! This means that if the file above, ",Object(l.b)("inlineCode",{parentName:"p"},"foo.graphql"),", contains the following:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-graphql"}),"query {\n  hello {\n    world\n  }\n}\n")),Object(l.b)("p",null,"The previous example turns into:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-javascript"}),"const query = {\n  'kind': 'Document',\n  'definitions': [{\n    ...\n  }],\n  'loc': {\n    ...\n    'source': {\n      'body': '\\\\\\\\n  query {\\\\\\\\n    hello {\\\\\\\\n      world\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n',\n      'name': 'GraphQL request',\n      ...\n    }\n  }\n};\n")),Object(l.b)("p",null,"You can also use the ",Object(l.b)("inlineCode",{parentName:"p"},"gql")," template tag the same way you would use the non-macro version from ",Object(l.b)("inlineCode",{parentName:"p"},"graphql-tag")," package with the added benefit of inlined parsing results."),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"import { gql } from 'graphql.macro';\n \nconst query = gql`\n  query User {\n    user(id: 5) {\n      lastName\n      ...UserEntry1\n    }\n  }\n`;\n")))}d.isMDXComponent=!0},178:function(e,n,a){"use strict";a.d(n,"a",(function(){return i})),a.d(n,"b",(function(){return d}));var t=a(0),r=a.n(t),l=r.a.createContext({}),o=function(e){var n=r.a.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):Object.assign({},n,e)),a},i=function(e){var n=o(e.components);return r.a.createElement(l.Provider,{value:n},e.children)};var p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},s=Object(t.forwardRef)((function(e,n){var a=e.components,t=e.mdxType,l=e.originalType,i=e.parentName,p=function(e,n){var a={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&-1===n.indexOf(t)&&(a[t]=e[t]);return a}(e,["components","mdxType","originalType","parentName"]),s=o(a),d=t,b=s[i+"."+d]||s[d]||c[d]||l;return a?r.a.createElement(b,Object.assign({},{ref:n},p,{components:a})):r.a.createElement(b,Object.assign({},{ref:n},p))}));function d(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var l=a.length,o=new Array(l);o[0]=s;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:t,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}s.displayName="MDXCreateElement"}}]);